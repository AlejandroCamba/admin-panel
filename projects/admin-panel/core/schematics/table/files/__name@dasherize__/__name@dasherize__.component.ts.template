import { Component } from '@angular/core';
import { HttpClient } from '@angular/common/http';

import { BlockComponent, Grid, PositionFactory } from '@admin-panel/core';
import { <%= underscore(name) %>_data  } from './<%= dasherize(name) %>-constants/<%= dasherize(name) %>-data.const';

import { BehaviorSubject } from 'rxjs';
import { map } from 'rxjs/operators'

@Component({
  selector: 'admin-table-<%= dasherize(name) %>',
  templateUrl: '<%= dasherize(name) %>.component.html'
})
export class <%= classify(name) %>TableComponent {
  // public pagination: Observable<number>;

  public  <%= camelize(name) %>TableConfig = <%= underscore(name) %>_data;
  
  public dataSubject$ = new BehaviorSubject(
    this.httpClient.get('').pipe(
      map((obj: []) => {
        // this.pagination = of(expresion)
        return obj['key'].map(mappedObj => {
          return {
            //key: value
          };
        });
      })
    )
  );

  public <%= camelize(name) %>Data = this.dataSubject$.asObservable();

  constructor(private httpClient: HttpClient) {}

  onChange(event) {
    this.dataSubject$.next(
    this.httpClient.get('').pipe(
      map((obj: []) => {
        // this.pagination = of(expresion)
        return obj['key'].map(mappedObj => {
          return {
            //key: value
          };
        });
      }))
    );
  }
}